# zookeeper env
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: ficus
  name: zk-env
  labels:
    app: zookeeper
data: # check https://github.com/bitnami/bitnami-docker-zookeeper
  # <service>.<namespace>.<cluster-domain>:<port>
  ZOO_SERVERS: "zk-stateful-0.zk-headless.ficus.svc.cluster.local:2888:3888,zk-stateful-1.zk-headless.ficus.svc.cluster.local:2888:3888,zk-stateful-2.zk-headless.ficus.svc.cluster.local:2888:3888"
  ZOO_LOG_LEVEL: "ERROR"
  ALLOW_ANONYMOUS_LOGIN: "yes"
immutable: true
---
# zookeeper pvc
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: ficus
  name: zk-pvc
  labels:
    app: zookeeper
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# 部署 Service Headless，用于Zookeeper间相互通信
apiVersion: v1
kind: Service
metadata:
  namespace: ficus
  name: zk-headless
  labels:
    app: zookeeper
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: client
      port: 2181
      targetPort: client
    - name: follower
      port: 2888
      targetPort: follower
    - name: election
      port: 3888
      targetPort: election
  selector:
    app: zookeeper
---
# 部署 Service，用于外部访问
apiVersion: v1
kind: Service
metadata:
  namespace: ficus
  name: zk-service
  labels:
    app: zookeeper
spec:
  type: ClusterIP
  ports:
    - name: client
      port: 2181
      targetPort: client
    - name: follower
      port: 2888
      targetPort: follower
    - name: election
      port: 3888
      targetPort: election
  selector:
    app: zookeeper
---
# StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: ficus
  name: zk-stateful
  labels:
    app: zookeeper
spec:
  selector:
    matchLabels:
      app: zookeeper
  serviceName: zk-headless  #声明它属于哪个Headless Service.
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: zookeeper
      labels:
        app: zookeeper
    spec:
      securityContext:
        fsGroup: 1001
      containers:
        - name: zookeeper
          image: docker.io/bitnami/zookeeper:3.7.0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
          command:
            - bash
            - -ec
            - |
              # Execute entrypoint as usual after obtaining ZOO_SERVER_ID based on POD hostname
              HOSTNAME=`hostname -s`
              if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
                ORD=${BASH_REMATCH[2]}
                export echo=$((ORD+1))
                echo "ZOO_SERVER_ID is $ZOO_SERVER_ID"
              else
                echo "Failed to get index from hostname $HOST"
                exit 1
              fi
              exec /entrypoint.sh /run.sh
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          envFrom:
            - configMapRef:
                name: zk-env
          ports:
            - name: client
              containerPort: 2181
            - name: follower
              containerPort: 2888
            - name: election
              containerPort: 3888
          livenessProbe:
            tcpSocket:
              port: client
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: client
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
            - mountPath: /bitnami/zookeeper
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: zk-pvc